---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by Administrator.
--- DateTime: 2021/8/15 18:27
---

local appCfg = require("system/app_cfg")

local updateMgr = {
    isLog = true,                       -- 是否日志打印
    manifest = nil,                     -- 主配置

    serviceMappingFName = "ServiceMapping.json",    -- 服务器映射文件名
    versionFName = "version.json",      -- 版本号文件名
    manifestFName = "manifest.json",    -- 主配置文件名

    resPath = "",                       -- 本地资源路径
    versionPath = "",                   -- 本地版本号文件路径
    manifestPath = "",                  -- 本地主配置文件路径

    platformStr = nil,                  -- 平台字符串
    versionStr = nil,                   -- 版本字符串
}

--- ==================== 私有方法 ====================

--- ==================== 公共方法 ====================

--- 初始化
---@param manifest: 主配置文件
function updateMgr.init()
    -- 设置包体键名
    appCfg.packKey = gCSharp.GetPackKey()

    -- 设置运行模式
    appCfg.set_run_mode(gCSharp.GetRunMode())

    -- 解析服务器映射
    local mappingStr = gCSharp.GetServiceMappingStr()
    if mappingStr and mappingStr ~= "" then
        local mappingTbl = gJson.decode(mappingStr)

        -- 设置资源服务器
        local newCfg = mappingTbl[appCfg.packKey]
        if newCfg then
            newCfg.resHost = gCSharp.GetResServiceHost()
            newCfg.resPort = gCSharp.GetResServicePort()

            -- 更新配置
            appCfg.update_cfg(newCfg)
        end
    end

    -- 获取平台字符串
    updateMgr.platformStr = gCSharp.GetPlatformString()

    -- 获得版本字符串
    updateMgr.versionStr = gCSharp.GetVersionStr()

    -- 获得本地路径
    updateMgr.resPath = gCSharp.GetResPath(updateMgr.platformStr)
    updateMgr.versionPath = gCSharp.GetResPath(updateMgr.platformStr, updateMgr.versionFName)
    updateMgr.manifestPath = gCSharp.GetResPath(updateMgr.platformStr, updateMgr.manifestFName)
end

return updateMgr