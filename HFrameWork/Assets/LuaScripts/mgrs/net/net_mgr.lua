---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by Administrator.
--- DateTime: 2021/8/15 18:28
---

local appCfg = require("system/app_cfg")

local netMgr = {
    isLog = true,       -- 是否输出日志
    delayTime = 0,      -- 延迟回调时间 秒 模拟弱网环境
}

--- 请求类型枚举
netMgr.enum = {
    entry = "entry",
    res = "res",
    logic = "logic",
}

--- ==================== 私有方法 ====================

--- ==================== 公共方法 ====================

--- 初始化
function netMgr.init()
    gCSharp.InitNetMgr(netMgr.isLog, netMgr.delayTime)
end

--- 拼接路径
---@param eType: 请求类型枚举 net_mgr.enum类型
---@param ...: 不带host和ip的url组
---@return : 拼接好的url
function netMgr.combine_path(eType, ...)
    -- 获得配置
    local cfg = appCfg.get_cfg()

    local finalUrl = ""

    -- 获取对应的host和port
    local host = cfg[eType.."Host"]
    local port = cfg[eType.."Port"]

    -- 拼接url
    local list = {...}
    table.insert(list, 1, gCSharp.FormatStr(host, port))
    finalUrl = table.concat(list, "/")

    return finalUrl
end

--- HttpGet请求
---@param url: url
---@param errorCallback: 错误回调
---@param listHeader: 头
---@param contentType: 内容类型 可空
---@return: 字符串
function netMgr.http_get(url, errorCallback, listHeader, contentType)
    local resStr = gCSharp.HttpGet(url, errorCallback, listHeader, contentType)
    return netMgr.post_callback(resStr)
end

--- HttpGet异步请求
---@param url: url
---@param callback: 回调方法返回字符串
---@param errorCallback: 错误回调
---@param listHeader: 头
---@param contentType: 内容类型 可空
function netMgr.http_get_async(url, callback, errorCallback, listHeader, contentType)
    -- 打开遮罩
    gMgrs.cover.add_cover_count(gMgrs.cover.eCover.net)

    -- 设置回调
    local innerCallback = function(resStr)
        -- 关闭遮罩
        gMgrs.cover.reduce_cover_count(gMgrs.cover.eCover.net)

        -- 回调
        local finalData = netMgr.post_callback(resStr)
        callback(finalData)
    end

    -- 设置错误回调
    local innerErrorCallback = function(errorMsg)
        -- 关闭遮罩
        gMgrs.cover.reduce_cover_count(gMgrs.cover.eCover.net)

        -- 回调
        if errorCallback then
            errorCallback(errorMsg)
        else
            -- 抛错
            error(errorMsg)
        end
    end

    -- 执行
    gCSharp.HttpGetAsync(url, innerCallback, innerErrorCallback, listHeader, contentType)
end

--- HttpPost请求
---@param url: url
---@param jsonData: 参数的json字符串
---@param errorCallback: 错误回调
---@param listHeader: 头
---@param contentType: 内容类型 可空
---@return: 字符串
function netMgr.http_post(url, jsonData, errorCallback, listHeader, contentType)
    local resStr = gCSharp.HttpPost(url, jsonData, errorCallback, listHeader, contentType)
    return netMgr.post_callback(resStr)
end

--- HttpGet请求
---@param url: url
---@param jsonData: 参数的json字符串
---@param callback: 回调方法
---@param errorCallback: 错误回调
---@param listHeader: 头
---@param contentType: 内容类型 可空
function netMgr.http_post_async(url, jsonData, callback, errorCallback, listHeader, contentType)
    -- 打开遮罩
    gMgrs.cover.add_cover_count(gMgrs.cover.eCover.net)

    -- 设置回调
    local innerCallback = function(resStr)
        -- 关闭遮罩
        gMgrs.cover.reduce_cover_count(gMgrs.cover.eCover.net)

        -- 回调
        local finalData = netMgr.post_callback(resStr)
        callback(finalData)
    end

    -- 设置错误回调
    local innerErrorCallback = function(errorMsg)
        -- 关闭遮罩
        gMgrs.cover.reduce_cover_count(gMgrs.cover.eCover.net)

        -- 回调
        if errorCallback then
            errorCallback(errorMsg)
        else
            -- 抛错
            error(errorMsg)
        end
    end

    gCSharp.HttpPostAsync(url, jsonData, innerCallback, innerErrorCallback, listHeader, contentType)
end

--- Http保存文件
---@param url: url
---@param savePath: 文件保存路径
---@param errorCallback: 错误回调方法
---@param listHeader: 头
---@param contentType: 内容类型 可空
---@return: 是否成功
function netMgr.http_save_file(url, savePath, errorCallback, listHeader, contentType)
    return gCSharp.HttpSaveFile(url, savePath, errorCallback, listHeader, contentType)
end

--- Http保存文件
---@param url: url
---@param savePath: 文件保存路径
---@param callback: 回调方法
---@param errorCallback: 错误回调方法
---@param progressCallback: 进度回调方法
---@param listHeader: 头
---@param contentType: 内容类型 可空
function netMgr.http_save_file_async(url, savePath, callback, errorCallback, progressCallback, listHeader, contentType)
    -- 打开遮罩
    gMgrs.cover.add_cover_count(gMgrs.cover.eCover.net)

    -- 设置回调
    local innerCallback = function(resStr)
        -- 关闭遮罩
        gMgrs.cover.reduce_cover_count(gMgrs.cover.eCover.net)

        -- 回调
        callback(resStr)
    end

    -- 设置错误回调
    local innerErrorCallback = function(errorMsg)
        -- 关闭遮罩
        gMgrs.cover.reduce_cover_count(gMgrs.cover.eCover.net)

        -- 回调
        if errorCallback then
            errorCallback(errorMsg)
        else
            -- 抛错
            error(errorMsg)
        end
    end

    gCSharp.HttpSaveFileAsync(url, savePath, innerCallback, innerErrorCallback, progressCallback, listHeader, contentType)
end

--- 返回数据后处理
---@param resStr: 返回的数据文本
---@return: 处理后的数据
function netMgr.post_callback(resStr)
    return gJson.decode(resStr)
end

return netMgr