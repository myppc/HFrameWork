---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by LeeroyLin.
--- DateTime: 2021/7/29 18:07
---

local uiEnum = require('mgrs/ui/ui_enum')
local eUI = uiEnum.eUI
local eNodes = uiEnum.eNodes

--- ==================== 遮罩 ====================

-- 无遮罩
local coverNone = {
    isHas = false,              -- 无遮罩
}

-- 默认遮罩
local coverDefault = {
    isHas = true,               -- 有遮罩
    color = gUnity.Color.black, -- 背景色
    alpha = 0.3,                -- 透明度
    isClickThrough = false,     -- 是否可点穿
    isClickClose = false,       -- 是否点击关闭
}

--- ==================== 资产条 ====================

-- 资产条类型
local eProperty = {
    profile = "profile",
    sub = "sub",
}

-- 资产条关闭ui
local propertyCloseUI = function(uiKey)
    gMgrs.ui.close_ui(uiKey)
end

-- 资产条关闭场景
local propertyPopScene = function(uiKey)
    -- todo
end

-- 默认资产信息
local propertiesDefault = {
    {id = 20010001, handler = nil},
    {id = 20030014, handler = nil},
    {id = 20010000, handler = nil},
}

--- ==================== UI配置 ====================

local uiCfg = {
    [eUI.update] = {        -- 更新界面
        node = eNodes.module,   -- 根节点
        parent = nil,           -- 模块父UI
        isClearOthers = true,   -- 是否清除其他界面
        isHideOthers = false,   -- 是否隐藏其他界面
        cover = coverNone,      -- 遮罩
        getIns = function()     -- 获得ui实例方法 避免直接require导致一开始就包含所有的ui
            local uiType = require("base/update/update_ui")
            return uiType:new()
        end,
    },
    [eUI.sysDialog] = {     -- 系统对话框
        node = eNodes.system,   -- 根节点
        parent = nil,           -- 模块父UI
        isClearOthers = false,  -- 是否清除其他界面
        isHideOthers = false,   -- 是否隐藏其他界面
        cover = coverDefault,   -- 遮罩
        getIns = function()     -- 获得ui实例方法 避免直接require导致一开始就包含所有的ui
            local uiType = require("base/sys_dialog/sys_dialog_ui")
            return uiType:new()
        end,
    },
    [eUI.login] = {         -- 登录界面
        node = eNodes.module,   -- 根节点
        parent = nil,           -- 模块父UI
        isClearOthers = true,   -- 是否清除其他界面
        isHideOthers = false,   -- 是否隐藏其他界面
        cover = coverNone,      -- 遮罩
        getIns = function()     -- 获得ui实例方法 避免直接require导致一开始就包含所有的ui
            local uiType = require("modules/login/login_ui")
            return uiType:new()
        end,
    },
    [eUI.chooseServer] = {     -- 选择服务器
        node = eNodes.top,   -- 根节点
        parent = eUI.login,           -- 模块父UI
        isClearOthers = false,  -- 是否清除其他界面
        isHideOthers = false,   -- 是否隐藏其他界面
        cover = coverDefault,   -- 遮罩
        getIns = function()     -- 获得ui实例方法 避免直接require导致一开始就包含所有的ui
            local uiType = require("modules/choose_server/choose_server_ui")
            return uiType:new()
        end,
    },
    [eUI.tips] = {     -- 小提示
        node = eNodes.system,   -- 根节点
        parent = nil,           -- 模块父UI
        isClearOthers = false,  -- 是否清除其他界面
        isHideOthers = false,   -- 是否隐藏其他界面
        cover = coverNone,      -- 遮罩
        getIns = function()     -- 获得ui实例方法 避免直接require导致一开始就包含所有的ui
            local uiType = require("base/tips/tips_ui")
            return uiType:new()
        end,
    },
    [eUI.mainCity] = {     -- 主场景
        node = eNodes.module,   -- 根节点
        parent = nil,           -- 模块父UI
        isClearOthers = true,  -- 是否清除其他界面
        isHideOthers = false,   -- 是否隐藏其他界面
        cover = coverNone,      -- 遮罩
        getIns = function()     -- 获得ui实例方法 避免直接require导致一开始就包含所有的ui
            local uiType = require("modules/main_city/main_city_ui")
            return uiType:new()
        end,
        property = {type = eProperty.profile, properties = propertiesDefault, btnRecharge = true},
        mainFixedUI = true,
    },
    [eUI.propertyBar] = {     -- 资产条
        node = eNodes.fixed,   -- 根节点
        parent = nil,           -- 模块父UI
        isClearOthers = false,  -- 是否清除其他界面
        isHideOthers = false,   -- 是否隐藏其他界面
        cover = coverNone,      -- 遮罩
        getIns = function()     -- 获得ui实例方法 避免直接require导致一开始就包含所有的ui
            local uiType = require("modules/property_bar/property_bar_ui")
            return uiType:new()
        end,
    },
    [eUI.playerInfo] = {     -- 个人信息
        node = eNodes.top,   -- 根节点
        parent = nil,           -- 模块父UI
        isClearOthers = false,  -- 是否清除其他界面
        isHideOthers = false,   -- 是否隐藏其他界面
        cover = coverDefault,   -- 遮罩
        getIns = function()     -- 获得ui实例方法 避免直接require导致一开始就包含所有的ui
            local uiType = require("modules/player_info/player_info_ui")
            return uiType:new()
        end,
    },
    [eUI.mainFixed] = {     -- 主固定UI
        node = eNodes.fixed,   -- 根节点
        parent = nil,           -- 模块父UI
        isClearOthers = false,  -- 是否清除其他界面
        isHideOthers = false,   -- 是否隐藏其他界面
        cover = coverNone,   -- 遮罩
        getIns = function()     -- 获得ui实例方法 避免直接require导致一开始就包含所有的ui
            local uiType = require("modules/main_fixed/main_fixed_ui")
            return uiType:new()
        end,
    },
    [eUI.world] = {     -- 世界地图UI
        node = eNodes.module,   -- 根节点
        parent = nil,           -- 模块父UI
        isClearOthers = true,  -- 是否清除其他界面
        isHideOthers = false,   -- 是否隐藏其他界面
        cover = coverNone,   -- 遮罩
        getIns = function()     -- 获得ui实例方法 避免直接require导致一开始就包含所有的ui
            local uiType = require("modules/world/world_ui")
            return uiType:new()
        end,
        property = {type = eProperty.profile, properties = propertiesDefault, btnRecharge = true},
        mainFixedUI = true,
    },
    [eUI.bag] = {     -- 背包
        node = eNodes.module,   -- 根节点
        parent = nil,           -- 模块父UI
        isClearOthers = false,  -- 是否清除其他界面
        isHideOthers = true,   -- 是否隐藏其他界面
        cover = coverNone,   -- 遮罩
        getIns = function()     -- 获得ui实例方法 避免直接require导致一开始就包含所有的ui
            local uiType = require("modules/bag/bag_ui")
            return uiType:new()
        end,
        property = {type = eProperty.sub, name = "行囊", backHandler = propertyCloseUI, properties = propertiesDefault},
    },
    [eUI.hero] = {     -- 武将
        node = eNodes.module,   -- 根节点
        parent = nil,           -- 模块父UI
        isClearOthers = false,  -- 是否清除其他界面
        isHideOthers = true,   -- 是否隐藏其他界面
        cover = coverNone,   -- 遮罩
        getIns = function()     -- 获得ui实例方法 避免直接require导致一开始就包含所有的ui
            local uiType = require("modules/hero/hero_ui")
            return uiType:new()
        end,
        property = {type = eProperty.sub, name = "武将", backHandler = propertyCloseUI, properties = propertiesDefault},
    },
    [eUI.heroDetails] = {     -- 武将
        node = eNodes.module,   -- 根节点
        parent = eUI.hero,           -- 模块父UI
        isClearOthers = false,  -- 是否清除其他界面
        isHideOthers = true,   -- 是否隐藏其他界面
        cover = coverNone,   -- 遮罩
        getIns = function()     -- 获得ui实例方法 避免直接require导致一开始就包含所有的ui
            local uiType = require("modules/hero/hero_details_ui")
            return uiType:new()
        end,
        property = {type = eProperty.sub, name = "武将详情", backHandler = propertyCloseUI, properties = propertiesDefault},
    },
}

return uiCfg