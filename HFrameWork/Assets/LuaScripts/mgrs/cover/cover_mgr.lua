---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by LeeroyLin.
--- DateTime: 2021/8/24 10:02
---

local coverCfg = require("mgrs/cover/cover_cfg")

local coverMgr = {
    dicCover = {},          -- 遮罩字典 对应 遮罩计次
    coverRoot = nil,        -- 遮罩根节点
    coverTemplete = nil,    -- 遮罩模版
    eCover = coverCfg.eCover,              -- 遮罩枚举
    isDebug = true,         -- 是否开启调试 开启后遮罩会显示遮罩名
}

local cfg = {
    -- 额外物体名
    exItemName = "ExItem",
}

--- ==================== 其他方法 ====================

--- 获得计时器键名
---@param eCover: 遮罩类型
---@return: 计时器键名
local function get_timer_key(eCover)
    return "_CoverMgr_"..eCover
end

--- 获得遮罩节点
---@param eCover: 遮罩类型
local function get_cover_node(eCover)
    if not coverMgr.coverRoot then
        -- 获得根节点
        coverMgr.coverRoot = gMgrs.ui.mainNode:Find("Covers")
        coverMgr.coverTemplete = coverMgr.coverRoot:Find("TempleteCover")
    end

    -- 获得cover根节点
    local node = coverMgr.coverRoot:Find(eCover)

    -- 是否没有该节点
    if not node then
        -- 创建新节点
        node = gUnity.Object.Instantiate(coverMgr.coverTemplete)

        -- 修改名字
        node.name = eCover

        -- 设置父节点
        node:SetParent(coverMgr.coverRoot, false)
    end

    return node
end

--- 设置遮罩文本
---@param cover: 遮罩节点
---@param msg: 显示信息
local function set_cover_msg(cover, msg)
    -- 获得文本节点
    local transText = cover:Find("TextMsg")

    -- 是否调试
    if coverMgr.isDebug then
        -- 显示文本
        transText:GetComponent("Text").text = msg
        transText:GetComponent("Animator").speed = math.random(90, 110) * 0.01
        transText.gameObject:SetActive(true)
    else
        -- 隐藏文本
        transText.gameObject:SetActive(false)
    end
end

--- 隐藏额外物体
local function hide_ex_child(objExItem, cCfg)
    -- 隐藏
    objExItem:SetActive(false)

    -- 回调
    if cCfg.callback then
        cCfg.callback(objExItem.transform, false)
    end
end

--- 添加额外子节点
---@param obj: 子物体
---@param cCfg: 遮罩配置
---@param eCover: 遮罩枚举
local function set_ex_child_delay(cover, obj, cCfg, eCover)
    -- 是否延迟显示
    if cCfg.showDelay and cCfg.showDelay > 0 then
        -- 先隐藏
        obj:SetActive(false)

        -- 添加延迟显示
        gMgrs.timer.use(get_timer_key(eCover), true, cCfg.showDelay, function ()
            -- 是否遮罩关闭了
            if not cover.gameObject.activeSelf then
                -- 隐藏
                hide_ex_child(obj, cCfg)
                return
            end

            -- 显示
            obj:SetActive(true)

            -- 回调
            if cCfg.callback then
                cCfg.callback(obj.transform, true)
            end
        end)

    else
        -- 显示
        obj:SetActive(true)

        -- 回调
        if cCfg.callback then
            cCfg.callback(obj.transform, true)
        end
    end
end

--- 当子物体加载完毕
local function on_ex_child_loaded(eCover, cover, cCfg, obj)
    -- 修改名字
    obj.name = cfg.exItemName

    -- 添加到遮罩节点
    obj.transform:SetParent(cover, false)

    -- 是否遮罩已经关闭
    if not cover.gameObject.activeSelf then
        -- 隐藏
        hide_ex_child(obj, cCfg)
        return
    end

    -- 设置子物体延迟
    set_ex_child_delay(cover, obj, cCfg, eCover)
end

--- 添加额外子节点
---@param cover: 遮罩节点
---@param eCover: 遮罩枚举
local function add_ex_child(cover, eCover)
    -- 获得配置
    local cCfg = coverCfg.exChild[eCover]

    -- 是否没有额外子物体
    if not cCfg then
        return
    end
    
    -- 是否有子物体了
    local trans = cover:Find(cfg.exItemName)
    if trans ~= nil then
        -- 设置子物体延迟
        set_ex_child_delay(cover, trans.gameObject, cCfg, eCover)
        return
    end

    -- 是否异步加载
    if cCfg.isAsync then
        gMgrs.res.load_asset_async(cCfg.module, cCfg.assetName, function (obj)
            -- 子物体加载完毕回调
            on_ex_child_loaded(eCover, cover, cCfg, obj)
        end)
    else
        -- 同步加载
        local obj = gMgrs.res.load_asset(cCfg.module, cCfg.assetName)

        -- 子物体加载完毕回调
        on_ex_child_loaded(eCover, cover, cCfg, obj)
    end
end

--- 尝试隐藏额外子物体
local function try_hide_ex_child(cover, eCover)
    -- 获得配置
    local cCfg = coverCfg.exChild[eCover]

    -- 是否没有额外子物体
    if not cCfg then
        return
    end

    -- 获得子节点
    local exItem = cover:Find(cfg.exItemName)
    if not exItem then
        return
    end

    -- 隐藏子节点
    hide_ex_child(exItem.gameObject, cCfg)
end

--- 清除计时器
---@param eCover: 遮罩枚举
local function clear_timer(eCover)
    -- 获得配置
    local cCfg = coverCfg.exChild[eCover]

    -- 是否没有额外子物体
    if not cCfg then
        return
    end

    -- 是否有延迟
    if cCfg.showDelay and cCfg.showDelay > 0 then
        -- 清除计时器
        gMgrs.timer.clear(get_timer_key(eCover))
    end
end

--- ==================== 公共方法 ====================

--- 显示该顶层遮罩 不作计次
---@param eCover: 顶层遮罩枚举值
function coverMgr.show_cover(eCover)
    -- 获得遮罩数据
    local lastNum = coverMgr.dicCover[eCover]

    -- 设置计次为1
    coverMgr.dicCover[eCover] = 1

    -- 是否没有遮罩
    if not lastNum then
        -- 显示遮罩
        local cover = get_cover_node(eCover)
        cover.gameObject:SetActive(true)

        -- 添加额外物体
        add_ex_child(cover, eCover)

        -- 设置遮罩文本
        set_cover_msg(cover, eCover)
    end
end

--- 隐藏顶层遮罩 忽略计次
---@param eCover: 顶层遮罩枚举值
function coverMgr.hide_cover(eCover)
    -- 获得遮罩数据
    local lastNum = coverMgr.dicCover[eCover]
    
    -- 是否有数据
    if lastNum then
        -- 隐藏遮罩
        local cover = get_cover_node(eCover)
        cover.gameObject:SetActive(false)

        -- 尝试隐藏额外子物体
        try_hide_ex_child(cover, eCover)

        -- 删除计时器
        clear_timer(eCover)

        -- 删除数据
        coverMgr.dicCover[eCover] = nil
    end
end

--- 增加该顶层遮罩计次 之前没有则显示
---@param eCover: 顶层遮罩枚举值
function coverMgr.add_cover_count(eCover)
    -- 获得遮罩数据
    local lastNum = coverMgr.dicCover[eCover]

    -- 是否没有数据
    if not lastNum then
        -- 设置计次
        lastNum = 0

        -- 显示遮罩
        local cover = get_cover_node(eCover)
        cover.gameObject:SetActive(true)

        -- 添加额外物体
        add_ex_child(cover, eCover)

        -- 设置遮罩文本
        set_cover_msg(cover, eCover)
    end

    -- 设置计次
    coverMgr.dicCover[eCover] = lastNum + 1
end

--- 减少顶层遮罩计次 减到0后隐藏
---@param eCover: 顶层遮罩枚举值
function coverMgr.reduce_cover_count(eCover)
    -- 获得遮罩数据
    local lastNum = coverMgr.dicCover[eCover]

    -- 是否有数据
    if lastNum then
        -- 减少后没次数了
        if lastNum == 1 then
            -- 隐藏遮罩
            local cover = get_cover_node(eCover)
            cover.gameObject:SetActive(false)

            -- 尝试隐藏额外子物体
            try_hide_ex_child(cover, eCover)

            -- 删除计时器
            clear_timer(eCover)

            -- 删除数据
            coverMgr.dicCover[eCover] = nil

            return
        end

        -- 减少次数
        coverMgr.dicCover[eCover] = lastNum - 1
    end
end

return coverMgr