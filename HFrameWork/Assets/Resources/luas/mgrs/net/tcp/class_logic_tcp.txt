





local clsTcpBase = require("mgrs/net/tcp/class_tcp_base")
local clsLogicTcp = gClass.declare("clsLogicTcp", clsTcpBase)










function clsLogicTcp:Ctor(address, port, isEncrypt, isConnect, callback, errorCallback)
self.base.Ctor(self, address, port, isEncrypt, isConnect, callback, errorCallback)
end




function clsLogicTcp:OnConnected()
self.base.OnConnected(self)
end


function clsLogicTcp:OnConnectError(msg)
self.base.OnConnectError(self, msg)
end


function clsLogicTcp:OnConnecting()
self.base.OnConnecting(self)
end


function clsLogicTcp:OnDisconnected()
self.base.OnDisconnected(self)
end


function clsLogicTcp:OnSendMsg(serial, ptc, str)
self.base.OnSendMsg(self, serial, ptc, str)
end


function clsLogicTcp:OnReceiveMsg(serial, ptc, str)
self.base.OnReceiveMsg(self, serial, ptc, str)
end

return clsLogicTcp
