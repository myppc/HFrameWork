





local helper = {}


function helper.is_nil(obj)
return obj == nil or obj:Equals(nil)
end


function helper.value_2_size_str(value)
local array = {"B", "KB", "MB", "GB", "TB"}

local uVal = 1


for i = #array, 1, -1 do

uVal = 1024 ^ (i - 1)


if value >= uVal then
return string.format("%.2f", value / uVal) .. array[i]
end
end

return value .. array[1]
end






function helper.refresh_ui(rectTrans, isGetComp)
local comp = rectTrans


if isGetComp then
comp = rectTrans:GetComponent("RectTransform")
end

gUnity.UI.LayoutRebuilder.ForceRebuildLayoutImmediate(comp)
end





function helper.pair_child_node(node, callback, isForwardPair)
if isForwardPair == nil then
isForwardPair = true
end

local startIdx = 0
local endIdx = node.childCount - 1
local dir = 1


if not isForwardPair then
startIdx = endIdx
endIdx = 0
dir = -1
end


for i = startIdx, endIdx, dir do
local t = i + 1
callback(node:GetChild(i), t)
end
end




function helper.destroy_children(node, isRecycle)
helper.pair_child_node(node, function (cell)
helper.destroy_node(cell, isRecycle)
end, false)
end

return helper
